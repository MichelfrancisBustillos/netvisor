name: Promote Release to Latest

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to promote to latest (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  retag-as-latest:
    name: Retag Images as Latest
    runs-on: ubuntu-latest
    
    steps:
      - name: Validate release exists
        run: |
          RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ inputs.release_tag }}")
          
          if [ "$(echo $RELEASE | jq -r '.message')" = "Not Found" ]; then
            echo "Release ${{ inputs.release_tag }} not found"
            exit 1
          fi
          
          echo "Release found: ${{ inputs.release_tag }}"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create multi-arch manifest for Server (Docker Hub)
        run: |
          docker buildx imagetools create -t mayanayza/netvisor-server:latest \
            mayanayza/netvisor-server:${{ inputs.release_tag }}
      
      - name: Create multi-arch manifest for Server (GHCR)
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}/server:latest \
            ghcr.io/${{ github.repository }}/server:${{ inputs.release_tag }}
      
      - name: Create multi-arch manifest for Daemon (Docker Hub)
        run: |
          docker buildx imagetools create -t mayanayza/netvisor-daemon:latest \
            mayanayza/netvisor-daemon:${{ inputs.release_tag }}
      
      - name: Create multi-arch manifest for Daemon (GHCR)
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}/daemon:latest \
            ghcr.io/${{ github.repository }}/daemon:${{ inputs.release_tag }}
